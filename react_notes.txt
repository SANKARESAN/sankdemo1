REACT Hand-on notes..

-- its js library
-- user interf appl react because its faster.
-- user standalone appl = angular.

angular = google, framework, update after every 6months,ver18.
react = facebook, ver18

-------------------------------------------------------------------------------------------

3/12/24

#  REACT :

--> it is javascript library.
--> it is use to create rich user interface.
--> it create single page application(SPA).



#  Technology Pre-Requestie :
--> html, css, js(basic js, ES5 and ES6, oops)


# s/w pre-requist :
--> nodejs
node -v
npm -v

# Editior: (VS CODE)


=========================================================================================================
# How to create react project ?
there are 3 ways to create react project,

1. by using npm: need to install configuration file.
	step-1 : npm install -g create-react-app
	step-2 : create-react-app appname
	step-3 : cd appname
	step-4 : npm start


2. by using npx: no need to install configuration file.
	step-1 : npx create-react-app appname
	step-2 : cd appname
	step-3 : npm start

3. BY using vite: it create proj with minimum package.

# How to display react project
npm start 

=========================================================================================================
# How to display react proj
http://localhost:3000

# React folder structure
-node_modules  : all the dependencies and dev-dependenies will install in this folder.
-package.json : all dependencies entry will found.
-package-lock.json : detail description of file you wil found here.
-README.md : it is guide file how to use react proj. 
-public : it contain static data an file in it.

============================================================================================================


# React is component basis Technology
-component : it is partial part of react proj.
		   : which we can reuse throughout react proj.
		   : it can be part of react proj.
 
- in react, "App.js" is root component. 



============================================================================================================


- in react we have two types of component,

1. function component   : when your main focus is on Ui design. -> file name must start with capital letter.
2. class component 		: when you have to implement complex logic in that case we it.

============================================================================================================


### How to display component output:

* JSX (Javascript + XML)

--> it allows us to write html code in react.
 -> it makes react code easy, in jsx we have wrap multiple elem inside one parent elem.
 -> parent elem must be any block elem like div, h1-h6, p  etc.

=======================================================================================================

### props:

--> it is parameter or functional parameter which is use pass data inside component.
--> props return data in objECT format.
--> we can access props in function component by writting 'props.propsName'.
--> we can access props in class component by writting 'this.props.propsName'.


=========================================================================================================
TASK-1 : create component and display output
TASK-2 : Write props with fname, lname, salary, gender, address and display its values.
TASK-3 : create a class component with name MyCounterComp having state with property count = 0,
(Task-folder) you have to implement logic to incre, decre and reset count value after click three button.

ParentComp (cc):state empName, empSal display it output, write method to manipulate state peoperty,
				PASS PROPS AND ACCESS GENDER, CONTACT.

TASK-5 : clickCounterComp (cc), state-count:0 
TASK-5 : HoverCounterComp (cc), state-count:0 , count will display when we hover

UserComp fc = props => user
=========================================================================================================


# Method and Events in React :	MyStateComp (cc)
# 1) state:
--> it is use to handle essential in class component.
--> it return us object type of data
--> in class component we write state inside constructor.
--> if you want use state in function component for that we use useState Hook


=================================================================================================
# 2) setState:
-->  it is use to manipulate state data inside class component.

==================================================================================================
###
1. How to use bootstrap in REACT ?
step-1 : npm i bootstrap
step-2 : go to index.js file and import its path	--> import 'bootstrap/dist/css/bootstrap.min.css';
step-3 : use bootstrap classes
=========================================================================================================

# RENDER : display component output or view on browser.


# CONDITIONAL RENDERING :									// ConditionalRenComp (cc)
-->	display component output on the basis of conditions.

1. use of if else : if condition is true then if block will execute otherwise else block.

2. element as variable : in var we store data and display inside tag and return it.

3. use of ternary oper: short hand syntax for if else
						(condition) ? truepart : falsepart;

4. use of short-circuit : if condition is true then and only then it display output.
(&&)
============================================================================================================

### CssComp (FC)
How to use CSS in RAECT ?
-- there are 3 ways to use css,
1. internal css	: 
2. external css : 
3. module css	: it is use when we have write  design for particular component.
				: we save file with filename.module.css

============================================================================================================
4/12/24
---------
(use to wrapping the multiple content)

#  FRAGMENT IN REACT :
  --------------------
-- it is a alternative option for jsx.
-- it remove unwamted elem from DOM heirarchy.
===========================================================================================================

# Component Interaction:
-- access data from parent component to child component.
-- while performing comp Interaction in between component they must have parent child relation.
-- how establish parent child relation in between component, first we have to import child component in 
parent component  and then write child component name as tag in parent component.

===========================================================================================================

# passing state data as props
# passing function data as props


===========================================================================================================
# PureComponent :	(Inbuild Class)
-- it is use to prevent un-necessary re-rendering comp by performancing shallow cmparison.
-- to achieve this we have extends class cmponent with PureComponent class.

# React.Memo():
-it is use to preventt unnecessary re-rendering func comp by perfoeming sgaloow comparison.
- to achieve we ahve to pass func comp name as argument to Reacrt.memo() method.

===================================================================================================
# HOC (Higher order Component):								MyHocComp (fc)  ig

-- when we have to share same business logic with mltiple component in that case we use it. 
-- in this we share  business logic from function component to class or function component.
====================================================================================================
MyMemoComp (fc)
MyImagesComp ()


=====================================================================================================
# ErrorBoundry :
----------------
-- it is react component which is use to handle error occurs in comp tree while rendering comp.
-- to handle it we use two class component life-cycle method.

1. getDerivedStateFromError() : when error occurs in component it execute automatically.
2. componentDidCatch() : it will display error log(error information).

=====================================================================================================
# VirtualDOM :
----------------
-- instead of manipulating BDOM directly, react creates vir.DOM in memory.
-- here it does all necessary changes before making on BDOM.
-- React render the code that need to be change only, that why react us faster. 


-- render array of object data in list.
-- render array data in select option.
=====================================================================================================

REACT -  DAY-2 

TASK-1 : Create class comp with name ToogleImgComp and toogle the img after click on single button.
TASK-2 : Create class comp with name MultipleImgComp and display the img after click on multiple button.
TASK-3 : Create class comp with name EmpDetails having state with array of object data, emp  containing property
		 like  EMPID, EMPNAME, EMPPOST, EMPSAL, EMPCONTACT, Empaddress for 10 emp and display the data .......?

		 
REACT -  DAY - 3 

TASK-1 : CREATE A NEW REACT PROJ FOR JEWELLARY SHOP WITH 4 COMPONENT  HOME, ABOUT, PRODUCT, CONTACT...
========================================================================================================================================
5/12/24	|
--------

# Routing in react:
----------------------
-- navigation of comp.
-- by writting routing path name in browser in browser url to display comp output  or view.
-- we use react-router-dom library in react to perform routing.
========================================================================================================================================

#  How to install react-router-dom ?
--> npm install react-router-dom@6			

1. createBrowserDOM():
-------------------------
: it is a method  which takes array of type of data.
: in its obj we use two prpty path, elem.
: in this method we define all types of routing.

2. RouterProvider():
------------------------
--  it helps us to render output of all routing comp on browser.
========================================================================================================================================
Folders...
---> src folder = Main Routing folder = routing.js file
---> layout folder = LoginComp (FC) = NavComp(FC) = FooterComp (FC) = PageNotFoundComp (FC) + MainDashboardComp (FC)
========================================================================================================================================

# TYPES OF ROUTING :
-------------------

1. naming routing  : display component output after writting component routing path name in browser url.

2. default routing : display component output without routing path name.

3. parameterize routing : display component output after passing parameter with routing path name.

4. child routing : 
-- display one routing inside another routing.
-- to perform child routing we use children property in obj 

5. wild-card routing(*) : when user write wrong path name in browser url then we decide what component output should display.
-- in wild-card routing path we 




======================================================================================================================???


# How to create layout for react proj ???

# class comp Lidfecycle  method.
--it comes with four phases.

1. Mounting Phase : when comp initialize.

	--- constructor : when class obj initialize constructor get execute automatically.
	
	--- getDerivedStateFromProps: it is static method which  execute automatically, 
		and it is use tpo set value coming from props to state.
	
	--- render: it is responsible to render component data.
	
	--- componentDidMount:  it will execute immediately after render method.


--------------------------------------------------------------------------------------------------------------------

2. Update Phase: when DOM manipulation is done.

	-- shouldComponentUpdate: it decide wheather component will update or not.
							: it return boolean value, if true then component will update.
 
	-- getSnapShotbeforeUpdate: it return previous data 0f props and state before updation of it.

	-- render: it is responsible to render component data.

	-- componentWillUpdate: it will retrun updated values of state and props

--------------------------------------------------------------------------------------------------------------------

3. Unmounting Phase : when component is deleted.

-- componentWillunmount: it just call before component deleted, it is use to disconnect component 
						 connection with other component.



--------------------------------------------------------------------------------------------------------------------

4. Error phase :

-- getDerivedStateFromError(): it execute automatically when error occurs in components.

-- componentDidcatch(): it return error log.

--------------------------------------------------------------------------------------------------------------------
# React / Reduct extension :-

--> rfce   = create normal func component.
--> rafce  = create arrow func component.
--> rce    = create class component
--> rconst = create constructor with super method and state.


======================================================================================================================

# Hooks in React :
------------------
-- it allows us to wse class comp feature in func comp
-- by using hooks we can use state in func comp 
-- in reavct hooks introduce in react  version-16.


# Rules to use Hooks :-
----------------------
-- Hooks work only in func comp.
-- Hooks always use in top-level comp.
-- Hooks can not be render conditionally.


1. useState Hook    : 
2. useEffect Hook   :
3. useContext Hook  :
4. useRef Hook      :
5. useReducer Hook  :
6. useCallback Hook :
7. useMemo Hook     :


1. useState Hook :-
--------------------
-- if you want to use state in func comp for that you have to use useState hook.
-- it return two values, 
1. currentState
2. function-to-update-stateData.
-- before using it, import it first from react library.
syntax : const [currentState, functionToUpdate] = useState(value).


--------------------------------------------------------------------------------------------------------------------

2. useEffect Hook :-
---------------------
-- it will execute after component render data.
-- it will handle work of componentDidMount, componentDidUpdate, componentWillunmount in func.
-- it takes two values  1.callback function. 2. dependencies.
syntax : useEffect(() => {}, dependencies);


case-1 : when no dependencies values.
	   : use effect will execute after every render.
syntax : useEffect(()=>{});

case-2 : when we pass dependencies value as black array.
	   : use effect will execute after every render.
syntax : useEffect(()=>{},[]);

case-3 : when we have to execute useEffect hook as we want.
	   : we pass value in dependencies.
syntax : useEffect(()=>{}, dependencies);
-------------------------------------------------------------------------------------------------------------------
======================================================================================================================
6-12-24 |
---------

# validation for dropdown :

# CRUD 
-REST Fake API :
Axios library : it is use to make request from react app to server.
- how to install Axios = CMD = npm i Axios


# json-server : it is dummmy serevr, which serevre environment to database
CMD = npm install json-server


# json database : 

# How to start and json-server upload db.json
cd src/shared/database (press Enter)

npx json-server --watch -p 8888 db.json (press enter)


-------------------------------------------------------------------------------------------------------------------
FOLDERS :- 
src folder = CRUD folder = ProductDashComp fc, ProductAddComp fc, ProductEditComp fc
-------------------------------------------------------------------------------------------------------------------


# get request : to fetch data from  server.

# Material UI : 
-- it provide inbuilt react component, which makes react project attractive.
-- as well as it provide 

--its  offiical website is www.mui.com

#1 How to install mui ?
npm install @mui/material @emotion/react @emotion/styled

#2 How to install material icon.


3---import EditIcon from '@mui/icons-material/Edit';


======================================================================================================================
 UseNavigate : it is use to perform automatic navigation
 UsePara

 as

