import React, {Component, Fragment} from "react";

class ClickCounterComp extends Component{

    constructor(){
        super();
        this.state={
            count:0
        }
    }

    increment = () => {
        this.setState((prevState)=>({count:prevState.count+1}));
    }

    render(){
        
        const {count}=this.state;

        return (
            <Fragment>
                <h2> This is Click Counter Component</h2>
                <p>Count:{count}</p>
                <button type="button" onClick={()=>this.increment()}>Count++</button>
            </Fragment>
        )
    }
}

export default ClickCounterComp;



import React, {Component, Fragment} from "react";

class HoverCounterComp extends Component{

    constructor(){
        super();
        this.state={
            count:0
        }
    }

    increment = () => {
        this.setState((prevState)=>({count:prevState.count+1}));
    }

    render(){

        const {count}=this.state;
        return (
            <Fragment>
                <h2> This is Click Counter Component</h2>
                <p>Count:{count}</p>
                <p onMouseOver={()=>this.increment()}>Hover on Me</p>
            </Fragment>
        )
    }
}

export default HoverCounterComp;








import React from "react";

const MyMemo=(props)=>{
    console.log("memo-comp render");
    return (
        <div>
            <h2>This is Memo Component</h2>
            <p>Name:{props.empName}</p>
        </div>
    )
};

export default React.memo(MyMemo);


import React, {Component, PureComponent} from "react";

class MyPureComp extends PureComponent{
    render(){
        console.log("pure-comp render")
        return (
            <div>
                <h2> This is My Pure Component</h2>
                <p>Name:{this.props.empName}</p>
            </div>
        )
    }
}

export default MyPureComp;



import React, { Component, Fragment} from "react";
import ChildComp from "./ChildComp";
import MyPureComp from "./MyPureComp";
import MyMemo from "./MyMemo";

class ParentComp extends Component{


    constructor(props){
        super(props);
        this.state={
            empName:"Arjun",
            empSal : 20000
        }

        
    }

    changeStateData = () =>{
        this.setState((prevState)=>({empName:"Sai kutthalingam S",empSal:prevState.empSal+5000}))
    }
    
    render()
    {
            const{empName,empSal} = this.state;
            const{gender,contact}= this.props;

            console.log("parent-comp render");
        return(


            <Fragment>
                <h2>This is Parent Component</h2>
                {/* <p>EmployeeName:{this.state.empName} EmployeeSalary:{this.state.empSal}</p> */}
                <p>Name:<strong>{empName}</strong>, Salary:<strong>{empSal}</strong></p>
                {/* <p>Gender:{this.props.gender} EmployeeSalary:{this.props.contact}</p> */}
                <p>Gender:<strong>{gender}</strong>, Contact:<strong>{contact}</strong></p>

                <button type="button" onClick={()=>this.changeStateData()}>Change State Data</button> <hr></hr>

                <ChildComp name={empName} sal={empSal} manageState={this.changeStateData}/> <hr></hr>

                    <MyPureComp empName={empName} />

                    <MyMemo empName={empName} />
            </Fragment>
        )

    }
}

export default ParentComp;











import React, {Component, Fragment} from "react";
import MyHOCComp from "./MyHOCComp";

class ClickCounterComp extends Component{

    // constructor(){
    //     super();
    //     this.state={
    //         count:0
    //     }
    // }

    // increment = () => {
    //     this.setState((prevState)=>({count:prevState.count+1}));
    // }

    render(){
        

        return (
            <Fragment>
                <h2> This is Click Counter Component</h2>
                {/* <p>Count:{count}</p>
                <button type="button" className="btn btn-outline-primary" onClick={()=>this.increment()}>Count++</button> */}
                <p>Count:{this.props.count}</p>
                <button type="button" className="btn btn-outline-primary" onClick={()=>this.props.increment()}>Count++</button>
            </Fragment>
        )
    }
}

// export default ClickCounterComp;
export default MyHOCComp(ClickCounterComp);


